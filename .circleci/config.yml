version: 2

references:

  ## Workspaces
  workspace_root: &workspace_root
                    ~/code

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  ## Docker image configurations
  container_config: &container_config
    docker:
      - image: circleci/android:api-28
    environment:
      #      JVM_OPTS: -Xmx3200m
      _JAVA_OPTIONS: "-Xms512m -Xmx1024m"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    resource_class: large
    working_directory: *workspace_root

  ## Cache
  gradle_key: &gradle_key
                jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

  gems_key: &gems_key
              gems-{{ checksum "Gemfile.lock" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: *gems_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle
        - ~/.m2

  save_gems_cache: &save_gems_cache
    save_cache:
      key: *gems_key
      paths:
        - vendor/bundle

  ## Dependencies
  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: bundle update && bundle install

  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies

  android_environment_files: &android_environment_files
    run:
      name: Setup Environment Files
      command: source environmentSetup.sh && createEnvironmentFiles

  ## System
  gradle_permissions: &gradle_permissions
    run:
      name: Chmod permissions
      command: sudo chmod +x ./gradlew

jobs:

  checkout:
    <<: *container_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *android_environment_files
      - *android_dependencies
      - *gradle_permissions
      - *save_gradle_cache
      - *save_gems_cache
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ./*

  ## Run build + lint
  lint:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: Gradle lint
          command: ./gradlew lintDebug

  ## Run Unit Test
  test:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: Gradle test
          command: ./gradlew :app:testDebugUnitTest
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results

  test_instrumentation:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: Build debug APK and release APK
          command: |
            ./gradlew test --max-workers 4
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleDebugAndroidTest
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=api-google-play-key.json
            sudo  gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run \
              --app ./app/build/outputs/apk/debug/app-debug.apk \
              --test ./app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}


  ## Deploy to Crashlytics Beta
  deploy_crashlytics:
    <<: *container_config
    steps:
      - *attach_workspace
      - *restore_gems_cache
      - *android_environment_files
      - *ruby_dependencies
      - *save_gems_cache
      - run:
          name: Deploy to Crashlytics Beta
          command: bundle exec fastlane deploy_to_crashlytics

  ## Deploy to Google Play Store
  deploy_google_play_store:
    <<: *container_config
    steps:
      - *attach_workspace
      - *restore_gems_cache
      - *android_environment_files
      - *ruby_dependencies
      - *save_gems_cache
      - run:
          name: Deploy to Google Play Store
          command: fastlane deploy_to_play_store
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ./app/build/outputs/apk/*

workflows:
  version: 2

  checks:
    jobs:
      - checkout:
          filters:
            branches:
              only:
                - /feature\/.*/
                - /fix\/.*/
      - lint:
          requires:
            - checkout
      - test:
          requires:
            - checkout

  build_and_deploy_dev:
    jobs:
      - checkout:
          filters:
            tags:
              only: /_alpha/
            branches:
              ignore: /.*/
      - lint:
          requires:
            - checkout
          filters:
            tags:
              only: /_alpha/
      - test:
          requires:
            - checkout
          filters:
            tags:
              only: /_alpha/
      - test_instrumentation:
          requires:
            - checkout
          filters:
            tags:
              only: /_alpha/
      - deploy_crashlytics:
          requires:
            - lint
            - test
            - test_instrumentation

  build_and_deploy_prod:
    jobs:
      - checkout:
          filters:
            tags:
              only: /release/
            branches:
              ignore: /.*/
      - lint:
          requires:
            - checkout
          filters:
            tags:
              only: /release/
      - test:
          requires:
            - checkout
          filters:
            tags:
              only: /release/
      - test_instrumentation:
          requires:
            - checkout
          filters:
            tags:
              only: /release/
      - hold:
          requires:
            - test
            - lint
            - test_instrumentation
          filters:
            tags:
              only: /release/
      - deploy_google_play_store:
          requires:
            - hold
          filters:
            tags:
              only: /release/